{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"machine_shape":"hm","authorship_tag":"ABX9TyMOoqqxxwEV5BMpoTZGv9mb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"gpuClass":"standard","accelerator":"GPU"},"cells":[{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yopjz60sPuY_","executionInfo":{"status":"ok","timestamp":1674848936299,"user_tz":300,"elapsed":28310,"user":{"displayName":"Logan Nye","userId":"10840817294754419157"}},"outputId":"69fcba77-f602-456e-c7df-ecb4fc3a96ce"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"If3LbEMnOhOQ","executionInfo":{"status":"ok","timestamp":1674848954276,"user_tz":300,"elapsed":17005,"user":{"displayName":"Logan Nye","userId":"10840817294754419157"}},"outputId":"29ebc190-af1f-423d-c759-e7393218d1e3"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting openai\n","  Downloading openai-0.26.4.tar.gz (55 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m55.6/55.6 KB\u001b[0m \u001b[31m5.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Installing backend dependencies ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: aiohttp in /usr/local/lib/python3.8/dist-packages (from openai) (3.8.3)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.8/dist-packages (from openai) (4.64.1)\n","Requirement already satisfied: requests>=2.20 in /usr/local/lib/python3.8/dist-packages (from openai) (2.25.1)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests>=2.20->openai) (2.10)\n","Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests>=2.20->openai) (4.0.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests>=2.20->openai) (2022.12.7)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests>=2.20->openai) (1.24.3)\n","Requirement already satisfied: charset-normalizer<3.0,>=2.0 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (2.1.1)\n","Requirement already satisfied: async-timeout<5.0,>=4.0.0a3 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (4.0.2)\n","Requirement already satisfied: multidict<7.0,>=4.5 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (6.0.4)\n","Requirement already satisfied: attrs>=17.3.0 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (22.2.0)\n","Requirement already satisfied: aiosignal>=1.1.2 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (1.3.1)\n","Requirement already satisfied: yarl<2.0,>=1.0 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (1.8.2)\n","Requirement already satisfied: frozenlist>=1.1.1 in /usr/local/lib/python3.8/dist-packages (from aiohttp->openai) (1.3.3)\n","Building wheels for collected packages: openai\n","  Building wheel for openai (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for openai: filename=openai-0.26.4-py3-none-any.whl size=67744 sha256=a5dbeeb4f9305b86d6f938edfeda6be4e1ae7acb276e1dddfdca0acd3cb1fa82\n","  Stored in directory: /root/.cache/pip/wheels/2b/d8/4e/268f029bd3277c1dd9e8781a0e0296e0a63822665bfa2429fc\n","Successfully built openai\n","Installing collected packages: openai\n","Successfully installed openai-0.26.4\n"]}],"source":["!pip install openai"]},{"cell_type":"code","source":["import zipfile\n","\n","zip_path = '/content/Enchondroma vs Grade I Chondrosarcoma.dataset.zip.zip'\n","with zipfile.ZipFile(zip_path, 'r') as zip_ref:\n","    zip_ref.extractall()\n"],"metadata":{"id":"hc3UJGcthjCk"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","from PIL import Image\n","\n","folder_path = '/content/Enchondroma vs Grade I Chondrosarcoma.v2i.folder/Enchondroma' # change this to the path of your unzipped folder\n","\n","for filename in os.listdir(folder_path):\n","    if filename.endswith('.jpg'):\n","        image = Image.open(os.path.join(folder_path, filename))\n","        new_filename = filename[:-4] + '.png'\n","        image.save(os.path.join(folder_path, new_filename))\n"],"metadata":{"id":"MSlfkKazh_et"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import os\n","\n","folder_path = '/content/Enchondroma vs Grade I Chondrosarcoma.v2i.folder/Enchondroma' # change this to the path of your folder\n","\n","for filename in os.listdir(folder_path):\n","    if filename.endswith('.jpg'):\n","        os.remove(os.path.join(folder_path, filename))\n"],"metadata":{"id":"BUzNoaIwingO"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["Input images must be square"],"metadata":{"id":"6VfPWUQ4TREF"}},{"cell_type":"code","source":["import os\n","import openai\n","import requests\n","\n","openai.api_key = \"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\"\n","\n","# specify the path of the folder containing the images\n","folder_path = \"/content/Untitled Folder\"\n","\n","# create the \"generated images\" folder if it doesn't exist\n","generated_folder = \"/content/familyphotos-generated\"\n","if not os.path.exists(generated_folder):\n","    os.makedirs(generated_folder)\n","\n","# iterate through all the images in the folder\n","for filename in os.listdir(folder_path):\n","    if filename.endswith('.png'):\n","        # create the image variations\n","        variations = openai.Image.create_variation(\n","            image=open(os.path.join(folder_path, filename), \"rb\"),\n","            n=10,\n","            size=\"512x512\"\n","        )\n","        # save the variations to the \"generated images\" folder\n","        for i, variation in enumerate(variations[\"data\"]):\n","            image_data = requests.get(variation[\"url\"])\n","            with open(os.path.join(generated_folder, f\"{filename}_variation_{i}.png\"), \"wb\") as f:\n","                f.write(image_data.content)\n","\n"],"metadata":{"id":"KUVfBJzfRs8U","executionInfo":{"status":"ok","timestamp":1674849641559,"user_tz":300,"elapsed":24783,"user":{"displayName":"Logan Nye","userId":"10840817294754419157"}}},"execution_count":9,"outputs":[]}]}